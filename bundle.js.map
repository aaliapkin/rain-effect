{"version":3,"sources":["webpack://rain-effect/./src/js/mouse.js","webpack://rain-effect/./src/js/lib.js","webpack://rain-effect/./src/js/shader.js","webpack://rain-effect/./src/js/texture.js","webpack://rain-effect/./src/js/animation.js","webpack://rain-effect/./src/shaders/heatmap.frag","webpack://rain-effect/./src/shaders/rain.frag","webpack://rain-effect/./src/shaders/rain.vert","webpack://rain-effect/webpack/bootstrap","webpack://rain-effect/webpack/runtime/compat get default export","webpack://rain-effect/webpack/runtime/define property getters","webpack://rain-effect/webpack/runtime/hasOwnProperty shorthand","webpack://rain-effect/webpack/runtime/make namespace object","webpack://rain-effect/./src/js/main.js"],"names":["mouse","x","y","window","addEventListener","e","mapclamp","in_start","in_end","out_start","out_end","undefined","Shader","gl","this","uniforms","positionLocation","vertexSource","fragmentSource","vertShader","createShader","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","vertSrc","shaderSource","fragSrc","compileShader","getShaderParameter","COMPILE_STATUS","alert","console","log","getShaderInfoLog","program","createProgram","attachShader","linkProgram","validateProgram","getProgramParameter","VALIDATE_STATUS","getProgramInfoLog","useProgram","name","type","u","uniform","getUniformLocation","push","arguments","find","uniformMatrix4fv","uniform1f","uniform2f","uniform1i","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","Texture","level","internalFormat","RGBA","border","format","srcFormat","UNSIGNED_BYTE","data","srcType","pixel","Uint8Array","texture","url","createTexture","bindTexture","TEXTURE_2D","texImage2D","width","height","image","Image","onload","generateMipmap","texParameteri","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","src","targetTextureWidth","targetTextureHeight","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","Animation","cnv","size","w","h","cx","cy","lastFrameTime","currentFrameTime","fps","fpsHistory","proj","psize","startTime","time","texture2","texture3","uvmouse","lastmousepos","mouseintensity","mouseshift","createCanvas","updateAnimation","document","createElement","body","appendChild","id","getContext","rainShader","vertexShaderSource2","fragmentShaderSource2","heatmapShader","vertexShaderSource1","fragmentShaderSource1","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","setPositions","addUniform","setCanvasSize","Date","now","fromUrl","empty","frameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","attachmentPoint","COLOR_ATTACHMENT0","framebufferTexture2D","calculateMVP","getMouse","drawHeatMap","drawImage","swapTextures","setUniform","activeTexture","TEXTURE0","TEXTURE1","viewport","clearColor","clear","COLOR_BUFFER_BIT","drawElements","TRIANGLES","UNSIGNED_SHORT","tmp","innerWidth","innerHeight","length","avg","reduce","a","b","updateCanvas","calculateFps","requestAnimationFrame","init","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","require"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\r\n\r\nconst mouse = {\r\n  x: null,\r\n  y: null,\r\n};\r\n\r\nwindow.addEventListener(\"mousemove\", (e) => {\r\n  mouse.x = e.x;\r\n  mouse.y = e.y;\r\n  // console.log(`mouse: ${mouse.x}, ${mouse.y}`);\r\n});\r\n\r\nwindow.addEventListener(\"mouseout\", (e) => {\r\n  mouse.x = null;\r\n  mouse.y = null;\r\n  // console.log(`mouse: ${mouse.x}, ${mouse.y}`);\r\n});\r\n\r\nexport default mouse;\r\n","\"use strict\";\r\n\r\nexport function mapclamp(x, in_start, in_end, out_start, out_end) {\r\n  x = x === undefined ? in_end : x;\r\n  x = x > in_end ? in_end : x;\r\n  x = x < in_start ? in_start : x;\r\n  let out =\r\n    out_start + ((out_end - out_start) / (in_end - in_start)) * (x - in_start);\r\n  return out;\r\n}\r\n\r\nexport function hexToRgb(hex) {\r\n  var bigint = parseInt(hex, 16);\r\n  var r = (bigint >> 16) & 255;\r\n  var g = (bigint >> 8) & 255;\r\n  var b = bigint & 255;\r\n\r\n  return r + \",\" + g + \",\" + b;\r\n}\r\n","export default class Shader {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.uniforms = [];\r\n    this.positionLocation = null;\r\n  }\r\n\r\n  createProgram(vertexSource, fragmentSource) {\r\n    const gl = this.gl;\r\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\r\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n\r\n    const vertSrc = gl.shaderSource(vertShader, vertexSource);\r\n    const fragSrc = gl.shaderSource(fragShader, fragmentSource);\r\n\r\n    gl.compileShader(vertShader, vertSrc);\r\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\r\n      alert(\"Error compiling vertex shader\");\r\n      console.log(gl.getShaderInfoLog(vertShader));\r\n    }\r\n\r\n    gl.compileShader(fragShader, fragSrc);\r\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\r\n      alert(\"Error compiling fragment shader\");\r\n      console.log(gl.getShaderInfoLog(fragShader));\r\n    }\r\n\r\n    const program = gl.createProgram();\r\n    gl.attachShader(program, vertShader);\r\n    gl.attachShader(program, fragShader);\r\n    gl.linkProgram(program);\r\n\r\n    gl.validateProgram(program);\r\n    if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\r\n      console.log(\"Error validating program \", gl.getProgramInfoLog(program));\r\n      return;\r\n    }\r\n    this.program = program;\r\n  }\r\n\r\n  useProgram() {\r\n    this.gl.useProgram(this.program);\r\n  }\r\n\r\n  addUniform(name, type) {\r\n    const uniform = this.gl.getUniformLocation(this.program, name);\r\n    const u = {\r\n      name,\r\n      type,\r\n      uniform,\r\n    };\r\n    this.uniforms.push(u);\r\n  }\r\n\r\n  setUniform() {\r\n    const name = arguments[0];\r\n    const u = this.uniforms.find((u) => u.name === name);\r\n    if (u) {\r\n      switch (u.type) {\r\n        case \"4fv\":\r\n          this.gl.uniformMatrix4fv(u.uniform, false, arguments[1]);\r\n          return;\r\n        case \"1f\":\r\n          this.gl.uniform1f(u.uniform, arguments[1]);\r\n          return;\r\n        case \"2f\":\r\n          this.gl.uniform2f(u.uniform, arguments[1], arguments[2]);\r\n          return;\r\n        case \"1i\":\r\n          this.gl.uniform1i(u.uniform, arguments[1]);\r\n          return;\r\n      }\r\n    }\r\n  }\r\n\r\n  setPositions(name) {\r\n    this.positionLocation = this.gl.getAttribLocation(this.program, name);\r\n    this.gl.enableVertexAttribArray(this.positionLocation);\r\n    this.gl.vertexAttribPointer(\r\n      this.positionLocation,\r\n      2,\r\n      this.gl.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );\r\n  }\r\n}\r\n","export default class Texture {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.level = 0;\r\n    this.internalFormat = this.gl.RGBA;\r\n    this.border = 0;\r\n    this.format = this.gl.RGBA;\r\n    this.srcFormat = this.gl.RGBA;\r\n    this.type = this.gl.UNSIGNED_BYTE;\r\n    this.data = null;\r\n    this.srcType = this.gl.UNSIGNED_BYTE;\r\n    this.pixel = new Uint8Array([106, 163, 149, 255]);\r\n    this.texture = null;\r\n  }\r\n\r\n  fromUrl(url) {\r\n    const gl = this.gl;\r\n\r\n    this.texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      this.level,\r\n      this.internalFormat,\r\n      this.width,\r\n      this.height,\r\n      this.border,\r\n      this.srcFormat,\r\n      this.srcType,\r\n      this.pixel\r\n    );\r\n\r\n    const image = new Image();\r\n    image.onload = () => {\r\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n      gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        this.level,\r\n        this.internalFormat,\r\n        this.srcFormat,\r\n        this.srcType,\r\n        image\r\n      );\r\n\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n      gl.texParameteri(\r\n        gl.TEXTURE_2D,\r\n        gl.TEXTURE_MIN_FILTER,\r\n        gl.LINEAR_MIPMAP_LINEAR\r\n      );\r\n    };\r\n    image.src = url;\r\n\r\n    return this.texture;\r\n  }\r\n\r\n  empty(targetTextureWidth, targetTextureHeight) {\r\n    const gl = this.gl;\r\n\r\n    this.texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n\r\n    this.data = null;\r\n\r\n    this.targetTextureWidth = targetTextureWidth;\r\n    this.targetTextureHeight = targetTextureHeight;\r\n\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      this.level,\r\n      this.internalFormat,\r\n      this.targetTextureWidth,\r\n      this.targetTextureHeight,\r\n      this.border,\r\n      this.srcFormat,\r\n      this.srcType,\r\n      this.data\r\n    );\r\n\r\n    // set the filtering so we don't need mips\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n    return this.texture;\r\n  }\r\n}\r\n","import mouse from \"js/mouse\";\r\nimport { mapclamp } from \"js/lib\";\r\nimport Shader from \"js/shader\";\r\nimport Texture from \"js/texture\";\r\n\r\nimport vertexShaderSource1 from \"shaders/rain.vert\";\r\nimport fragmentShaderSource1 from \"shaders/heatmap.frag\";\r\n\r\nimport vertexShaderSource2 from \"shaders/rain.vert\";\r\nimport fragmentShaderSource2 from \"shaders/rain.frag\";\r\nclass Animation {\r\n  cnv = null;\r\n  gl = null;\r\n  size = { w: 0, h: 0, cx: 0, cy: 0 };\r\n\r\n  lastFrameTime = 0;\r\n  currentFrameTime = 0;\r\n  fps = 60;\r\n  fpsHistory = [];\r\n\r\n  proj = [];\r\n\r\n  psize = 4.0;\r\n  startTime = 0.0;\r\n  time = 0.0;\r\n  texture = null;\r\n  texture2 = null;\r\n  texture3 = null;\r\n\r\n  uvmouse = {\r\n    x: 0.0,\r\n    y: 0.0,\r\n  };\r\n  lastmousepos = {\r\n    x: 0.0,\r\n    y: 0.0,\r\n  };\r\n  mouseintensity = 0.0;\r\n  mouseshift = 0.0;\r\n\r\n  init() {\r\n    this.createCanvas();\r\n    this.updateAnimation();\r\n  }\r\n\r\n  calculateMVP() {\r\n    let left, right, top, bottom, far, near;\r\n    const ratio = this.size.w / this.size.h;\r\n\r\n    left = 0;\r\n    right = 1;\r\n\r\n    bottom = 1;\r\n    top = 0;\r\n\r\n    near = 0.0;\r\n    far = 1.0;\r\n\r\n    // prettier-ignore\r\n    this.proj = [ \r\n      2 / (right - left),                   0,                 0,  -(right + left) / (right - left),\r\n                       0,  2 / (top - bottom),                 0,  -(top + bottom) / (top - bottom),\r\n                       0,                   0,  2 / (far - near),      -(far + near) / (far - near),\r\n                       0,                   0,                 0,                                 1,\r\n    ];\r\n  }\r\n\r\n  createCanvas() {\r\n    this.cnv = document.createElement(`canvas`);\r\n    document.body.appendChild(this.cnv);\r\n    this.cnv.id = \"canvas\";\r\n\r\n    const gl = (this.gl = this.cnv.getContext(\"webgl2\"));\r\n\r\n    this.rainShader = new Shader(gl);\r\n    this.rainShader.createProgram(vertexShaderSource2, fragmentShaderSource2);\r\n\r\n    this.heatmapShader = new Shader(gl);\r\n    this.heatmapShader.createProgram(\r\n      vertexShaderSource1,\r\n      fragmentShaderSource1\r\n    );\r\n\r\n    const vertexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n\r\n    // prettier-ignore\r\n    const positions = [\r\n      -1.0, -1.0, \r\n       1.0, -1.0, \r\n       1.0,  1.0, \r\n      -1.0,  1.0\r\n    ];\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n    const indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\r\n    // prettier-ignore\r\n    const indices = [\r\n      0, 1, 2, \r\n      2, 3, 0\r\n    ];\r\n\r\n    gl.bufferData(\r\n      gl.ELEMENT_ARRAY_BUFFER,\r\n      new Uint16Array(indices),\r\n      gl.STATIC_DRAW\r\n    );\r\n\r\n    this.heatmapShader.useProgram();\r\n    this.heatmapShader.setPositions(\"aPos\");\r\n    this.heatmapShader.addUniform(\"u_Sampler\", \"1i\");\r\n    this.heatmapShader.addUniform(\"u_Mouse\", \"2f\");\r\n    this.heatmapShader.addUniform(\"u_time\", \"1f\");\r\n    this.heatmapShader.addUniform(\"u_MVP\", \"4fv\");\r\n    this.heatmapShader.addUniform(\"u_asp\", \"1f\");\r\n\r\n    this.rainShader.useProgram();\r\n    this.rainShader.setPositions(\"aPos\");\r\n    this.rainShader.addUniform(\"u_MVP\", \"4fv\");\r\n    this.rainShader.addUniform(\"u_time\", \"1f\");\r\n    this.rainShader.addUniform(\"u_Size\", \"1f\");\r\n    this.rainShader.addUniform(\"u_Sampler\", \"1i\");\r\n    this.rainShader.addUniform(\"u_SamplerH\", \"1i\");\r\n    this.rainShader.addUniform(\"u_Mouse\", \"2f\");\r\n    this.rainShader.addUniform(\"u_MouseInt\", \"1f\");\r\n    this.rainShader.addUniform(\"u_asp\", \"1f\");\r\n    this.rainShader.addUniform(\"u_mouseshift\", \"1f\");\r\n\r\n    this.setCanvasSize();\r\n    window.addEventListener(`resize`, () => {\r\n      this.setCanvasSize();\r\n    });\r\n\r\n    this.startTime = Date.now();\r\n\r\n    this.texture = new Texture(gl).fromUrl(\"img/bg12.jpg\");\r\n\r\n    // TODO: should be 1 dimentional\r\n    this.targetTextureWidth = this.size.w;\r\n    this.targetTextureHeight = this.size.h;\r\n    this.texture2 = new Texture(gl).empty(\r\n      this.targetTextureWidth,\r\n      this.targetTextureHeight\r\n    );\r\n\r\n    this.texture3 = new Texture(gl).empty(\r\n      this.targetTextureWidth,\r\n      this.targetTextureHeight\r\n    );\r\n\r\n    // Create and bind the framebuffer\r\n    this.frameBuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\r\n\r\n    // attach the texture as the first color attachment\r\n    const attachmentPoint = gl.COLOR_ATTACHMENT0;\r\n    gl.framebufferTexture2D(\r\n      gl.FRAMEBUFFER,\r\n      attachmentPoint,\r\n      gl.TEXTURE_2D,\r\n      this.texture2,\r\n      0\r\n    );\r\n  }\r\n\r\n  updateCanvas() {\r\n    this.time = (Date.now() - this.startTime) / 1000.0;\r\n\r\n    this.calculateMVP();\r\n    this.getMouse();\r\n\r\n    this.drawHeatMap();\r\n    this.drawImage();\r\n    this.swapTextures();\r\n  }\r\n\r\n  drawImage() {\r\n    const gl = this.gl;\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n    this.rainShader.useProgram();\r\n    this.rainShader.setUniform(\"u_MVP\", this.proj);\r\n    this.rainShader.setUniform(\"u_time\", this.time);\r\n    this.rainShader.setUniform(\"u_Size\", this.psize);\r\n    this.rainShader.setUniform(\"u_Mouse\", this.uvmouse.x, this.uvmouse.y);\r\n    this.rainShader.setUniform(\"u_MouseInt\", this.mouseintensity);\r\n    this.rainShader.setUniform(\"u_asp\", this.size.w / this.size.h);\r\n    this.rainShader.setUniform(\"u_mouseshift\", this.mouseshift);\r\n\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    this.rainShader.setUniform(\"u_Sampler\", 0);\r\n\r\n    gl.activeTexture(gl.TEXTURE1);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture2);\r\n    this.rainShader.setUniform(\"u_SamplerH\", 1);\r\n\r\n    this.gl.viewport(0, 0, this.size.w, this.size.h);\r\n\r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\r\n  }\r\n\r\n  drawHeatMap() {\r\n    const gl = this.gl;\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\r\n\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture2);\r\n    const attachmentPoint = gl.COLOR_ATTACHMENT0;\r\n    gl.framebufferTexture2D(\r\n      gl.FRAMEBUFFER,\r\n      attachmentPoint,\r\n      gl.TEXTURE_2D,\r\n      this.texture2,\r\n      0\r\n    );\r\n\r\n    this.heatmapShader.useProgram();\r\n    this.heatmapShader.setUniform(\"u_Mouse\", this.uvmouse.x, this.uvmouse.y);\r\n    this.heatmapShader.setUniform(\"u_time\", this.time);\r\n    this.heatmapShader.setUniform(\"u_MVP\", this.proj);\r\n    this.heatmapShader.setUniform(\"u_asp\", this.size.w / this.size.h);\r\n\r\n    gl.activeTexture(gl.TEXTURE1);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture3);\r\n    this.heatmapShader.setUniform(\"u_Sampler\", 1);\r\n\r\n    gl.viewport(0, 0, this.targetTextureWidth, this.targetTextureHeight);\r\n\r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\r\n\r\n    // gl.activeTexture(gl.TEXTURE0);\r\n    // gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n  }\r\n\r\n  swapTextures() {\r\n    const tmp = this.texture2;\r\n    this.texture2 = this.texture3;\r\n    this.texture3 = tmp;\r\n  }\r\n\r\n  setCanvasSize() {\r\n    this.size.w = this.cnv.width = window.innerWidth;\r\n    this.size.h = this.cnv.height = window.innerHeight;\r\n    this.size.cx = this.size.w / 2;\r\n    this.size.cy = this.size.h / 2;\r\n    this.gl.viewport(0, 0, this.size.w, this.size.h);\r\n  }\r\n\r\n  getMouse() {\r\n    let x = mouse.x;\r\n    let y = mouse.y;\r\n    // TODO: tweak\r\n    if (x > 0 && x < this.size.w && y > 0 && y < this.size.h) {\r\n      this.uvmouse = {\r\n        x: mapclamp(x, 0, this.size.w, 0, 1),\r\n        y: mapclamp(y, 0, this.size.h, 0, 1),\r\n      };\r\n      this.mouseshift = mapclamp(\r\n        x - this.size.cx,\r\n        -this.size.w / 3,\r\n        this.size.w / 3,\r\n        -0.05,\r\n        0.05\r\n      );\r\n      return;\r\n    }\r\n    this.uvmouse = {\r\n      x: -1,\r\n      y: -1,\r\n    };\r\n    this.mouseshift = 0;\r\n  }\r\n\r\n  calculateFps() {\r\n    if (this.lastFrameTime == 0) {\r\n      this.lastFrameTime = this.time;\r\n    } else {\r\n      this.currentFrameTime = this.time - this.lastFrameTime;\r\n      this.fpsHistory.push(1 / this.currentFrameTime);\r\n      this.lastFrameTime = this.time;\r\n      if (this.fpsHistory.length > 20) {\r\n        const sum = this.fpsHistory.reduce((a, b) => a + b, 0);\r\n        const avg = sum / this.fpsHistory.length || 0;\r\n        this.fps = avg;\r\n        this.fpsHistory = [];\r\n        // console.log(\"Animation fps \", Math.round(this.fps, 0));\r\n      }\r\n    }\r\n  }\r\n\r\n  // animation loop\r\n  updateAnimation() {\r\n    this.updateCanvas();\r\n    this.calculateFps();\r\n    window.requestAnimationFrame(() => {\r\n      this.updateAnimation();\r\n    });\r\n  }\r\n}\r\n\r\nwindow.onload = () => {\r\n  new Animation().init();\r\n};\r\n","module.exports = \"#version 300 es\\r\\n\\r\\nprecision highp float;\\r\\n\\r\\n#define S(a, b, t) smoothstep(a, b, t)\\r\\n#define _2PI 6.28318530718\\r\\n\\r\\nout vec4 FragColor;\\r\\nin vec2 uv;\\r\\n\\r\\nuniform float u_time;\\r\\nuniform sampler2D u_Sampler;\\r\\nuniform float u_asp;\\r\\nuniform vec2 u_Mouse;\\r\\n\\r\\nfloat N21(vec2 p) {\\r\\n  p = fract(p * vec2(123.34f, 345.45f));      \\r\\n  p += dot(p, p + 34.345f);\\r\\n  return fract(p.x * p.y);      \\r\\n}\\r\\n\\r\\nvec4 SampleBlur(sampler2D u_Sampler, vec2 sampleuv, float Directions, float Quality, float Size, vec2 Radius, float mip) {\\r\\n  vec4 Color = texture(u_Sampler, sampleuv, mip);\\r\\n  for(float d = 0.0; d < _2PI; d += _2PI/Directions) {\\r\\n    for(float i = 1.0 / Quality; i <= 1.0; i += 1.0 / Quality) {\\r\\n      Color += texture(u_Sampler, sampleuv + vec2(cos(d), sin(d)) * Radius * i, mip);\\t\\t\\r\\n    }\\r\\n  }\\r\\n  Color /= Quality * Directions;\\r\\n  return Color;\\r\\n}\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n  vec2 asp = vec2(u_asp / 1.4, 1.0); // texture aspect\\r\\n  float t = mod(u_time, 72000.0);\\r\\n  vec2 mouse = u_Mouse;\\r\\n  vec2 uv1 = uv;\\r\\n  uv1.y = 1.0 - uv1.y;\\r\\n\\r\\n  // Sampler UV Directions Quality Size Radius Mip\\r\\n  vec4 BlurColor = SampleBlur(u_Sampler, uv1, 6.0, 2.0, 0.5, vec2(0.01), 2.0);\\r\\n\\r\\n  float mouseCircle = S(0.2, 0.15, length((mouse - uv1) * asp )) ;\\r\\n\\r\\n  FragColor = BlurColor + 0.03 * mouseCircle;\\r\\n  FragColor *= 0.92;\\r\\n  FragColor = clamp(FragColor, 0.0, 1.0);\\r\\n}\"","module.exports = \"#version 300 es\\r\\n\\r\\nprecision highp float;\\r\\n\\r\\n#define S(a, b, t) smoothstep(a, b, t)\\r\\n#define _2PI 6.28318530718\\r\\n\\r\\nout vec4 FragColor;\\r\\nin vec2 uv;\\r\\n\\r\\nuniform float u_time;\\r\\nuniform float u_Size;\\r\\nuniform sampler2D u_Sampler;\\r\\nuniform sampler2D u_SamplerH;\\r\\nuniform float u_MouseInt;\\r\\nuniform float u_asp;\\r\\nuniform vec2 u_Mouse;\\r\\nuniform float u_mouseshift;\\r\\n\\r\\nfloat N21(vec2 p) {\\r\\n  p = fract(p * vec2(123.34f, 345.45f));      \\r\\n  p += dot(p, p + 34.345f);\\r\\n  return fract(p.x * p.y);      \\r\\n}\\r\\n\\r\\nfloat blendScreen(float base, float blend) {\\r\\n\\treturn 1.0-((1.0-base)*(1.0-blend));\\r\\n}\\r\\n\\r\\nvec3 blendScreen(vec3 base, vec3 blend) {\\r\\n\\treturn vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\\r\\n}\\r\\n\\r\\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\\r\\n\\treturn (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\\r\\n}\\r\\n\\r\\nvec4 blendScreen(vec4 base, vec4 blend, float opacity) {\\r\\n\\treturn vec4(blendScreen(base.xyz, blend.xyz, opacity), 1.0);\\r\\n}\\r\\n\\r\\n\\r\\nvec4 SampleBlur(sampler2D u_Sampler, vec2 sampleuv, float Directions, float Quality, float Size, vec2 Radius, float mip) {\\r\\n  vec4 Color = texture(u_Sampler, sampleuv, mip);\\r\\n  for(float d = 0.0; d < _2PI; d += _2PI/Directions) {\\r\\n    for(float i = 1.0 / Quality; i <= 1.0; i += 1.0 / Quality) {\\r\\n      Color += texture(u_Sampler, sampleuv + vec2(cos(d), sin(d)) * Radius * i, mip);\\t\\t\\r\\n    }\\r\\n  }\\r\\n  Color /= Quality * Directions;\\r\\n  return Color;\\r\\n}\\r\\n\\r\\nvec3 Layer(vec2 UV, float t) {\\r\\n  \\r\\n  vec2 asp = vec2(2.0f, 1.0f); // y: 2, x: 1\\r\\n  vec2 uv1 = UV * u_Size * asp;\\r\\n  uv1.y = -uv1.y;\\r\\n  uv1.y += t * .25f;\\r\\n  vec2 gv = fract(uv1) - .5f;\\r\\n  vec2 id = floor(uv1);\\r\\n\\r\\n  float n = N21(id);\\r\\n  t += n * 6.2831;\\r\\n  \\r\\n  float w = UV.y * 10.0f;\\r\\n  float x = (n - 0.5f) * .8f;\\r\\n  x += (.4f - abs(x)) * sin(3.0f * w) * pow(sin(w), 6.0f) * .45f;\\r\\n\\r\\n  float y = -sin(t + sin(t + sin(t) * .5f)) * .45f;\\r\\n  y -= (gv.x - x) * (gv.x - x);\\r\\n\\r\\n  vec2 dropPos = (gv - vec2(x, y)) / asp;\\r\\n  float drop = S(.035f, .025f, length(dropPos));\\r\\n\\r\\n  vec2 trailPos = (gv - vec2(x, t * .25f)) / asp;\\r\\n  trailPos.y = (fract(trailPos.y * 16.0f) - 0.5f) / 16.0f;\\r\\n  float trail = S(.03f, .001f, length(trailPos)) * .4f;\\r\\n  float fogTrail = S(-.1f, .1f, dropPos.y);\\r\\n  fogTrail *= S(.5f, y, gv.y);\\r\\n  trail *= fogTrail;\\r\\n  fogTrail *= S(0.03f, 0.02f, abs(dropPos.x));\\r\\n\\r\\n  vec2 offs = drop * dropPos * .8 + trail * trailPos * .4;\\r\\n\\r\\n  return vec3(offs, fogTrail);\\r\\n}\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n  vec2 asp = vec2(u_asp, 1.0);\\r\\n  // cycle time to avoid precision drop\\r\\n  float t = mod(u_time, 72000.0);\\r\\n\\r\\n  float imgasp = u_asp / 1.6; // image aspect ratio\\r\\n  vec2 sampleuv;\\r\\n  if (imgasp > 1.0) { \\r\\n    sampleuv = (uv - vec2(0.5)) * vec2(1.0, 1.0 / imgasp) + vec2(0.5);\\r\\n  } else {\\r\\n    sampleuv = (uv - vec2(0.5)) * vec2(imgasp, 1.0) + vec2(0.5);\\r\\n  }\\r\\n\\r\\n  vec2 uv1 = uv * asp;\\r\\n\\r\\n  // mouse shift\\r\\n  sampleuv += vec2(u_mouseshift/4.0, 0);\\r\\n  uv1 += vec2(u_mouseshift, 0);\\r\\n\\r\\n  vec3 drops = Layer(uv1, t);\\r\\n  drops += Layer(uv1 * 1.73f + 1.75f, t + 1.87);\\r\\n  drops += Layer(uv1 * 1.13f + 7.03f, t + 3.31);\\r\\n\\r\\n  float blur = (1.0f - drops.z);\\r\\n  vec2 uvoff = sampleuv + drops.xy;\\r\\n  \\r\\n  // Sampler UV Directions Quality Size Radius Mip\\r\\n  vec4 Color = SampleBlur(u_Sampler, sampleuv, 16.0, 8.0, 1.0, vec2(0.05), 2.0);\\r\\n  Color = blendScreen(Color, vec4(1.0, 0.6, 0.3, 1.0), 0.05);\\r\\n\\r\\n  float mouseHeat = texture(u_SamplerH, sampleuv).x;\\r\\n  blur *= (1.0f - mouseHeat);\\r\\n\\r\\n  vec4 BaseColor = texture(u_Sampler, uvoff) * 0.9;\\r\\n  FragColor = mix(BaseColor, Color, blur);\\r\\n  // FragColor = vec4(u_mouseshift);\\r\\n}\"","module.exports = \"#version 300 es\\r\\n\\r\\nprecision highp float;\\r\\nlayout(location = 0) in vec2 aPos;\\r\\n\\r\\nout vec2 uv;\\r\\n\\r\\nuniform mat4 u_MVP;\\r\\n\\r\\nvoid main() {\\r\\n  gl_Position = vec4(aPos, .0f, 1.0f);\\r\\n  vec4 uv_out =  gl_Position * inverse(u_MVP);\\r\\n  uv = uv_out.xy;\\r\\n}\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","require(\"css/styles.scss\");\r\nrequire(\"js/animation\");\r\n"],"sourceRoot":""}